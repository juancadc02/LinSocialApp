@{
    ViewData["Title"] = "Lista de Publicaciones";
    var listaPublicaciones = ViewData["listaPublicaciones"] as List<DB.Modelo.Publicaciones>;
    var listaComentarios = ViewData["comentariosConUsuario"] as List<ComentarioConUsuarioViewModel>;
    var exitoMensaje = TempData["ExitoMensaje"] as string;
    var eliminarMeGusta = TempData["eliminarMeGusta"] as string;
    var darMeGusta = TempData["darMeGusta"] as string;

    
}

@using LinkSocial1.DTO
@model DB.Modelo.Publicaciones

<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="~/css/paginaInicio.css">
</head>

<body>
    <div class="scrollable-container">
        <div class="d-flex">


            <div class="flex-grow-1 mx-auto col-6">
                <div class="container">
                    <h2 style="text-align: center;">LinkSocial</h2>
                </div>
                <main>
                    @foreach (var publicacion in listaPublicaciones)
                    {
                        <!--Container para mostrar las publicaciones-->
                        <div class="publicacion-container mx-auto mb-4">
                            <div class="img-container">
                                <img src="@publicacion.contenidoPublicacion" class="img-fluid">
                                <br>
                                @{
                                    Dictionary<int, bool> likesPorPublicacion = ViewData["likesPorPublicacion"] as Dictionary<int, bool>;

                                    bool usuarioDioLike = likesPorPublicacion != null &&
                                    likesPorPublicacion.ContainsKey(publicacion.idPublicacion) &&
                                    likesPorPublicacion[publicacion.idPublicacion];
                                }

                               
                            </div>

                           <!--Container para dar me gusta-->
                            <div class="container">
                                @if (usuarioDioLike)
                                {
                                    <a href="@Url.Action("darLikePublicacion", "ControladorLikes", new { idPublicacion = publicacion.idPublicacion })">
                                        <i class="fa fa-heart" aria-hidden="true"></i>
                                    </a>
                                }
                                else
                                {
                                    <a href="@Url.Action("darLikePublicacion", "ControladorLikes", new { idPublicacion = publicacion.idPublicacion })">
                                        <i class="fa fa-heart-o" aria-hidden="true"></i>
                                    </a>
                                }
                            </div>
                            <br>


                            <!--Container para ver los comentarios de cada publicacion-->
                            <div class="comentarios-container">
                                <h4>Comentarios:</h4>
                                <ul class="list-unstyled">
                                    @foreach (var comentarioConUsuario in listaComentarios)
                                    {
                                        if (comentarioConUsuario.Comentario.idPublicacion == publicacion.idPublicacion)
                                        {
                                            <li>
                                                <strong>
                                                    @if (comentarioConUsuario.Usuario != null)
                                                    {
                                                        @comentarioConUsuario.Usuario.nombreCompleto
                                                    }
                                                </strong>: @comentarioConUsuario.Comentario.contenidoComentario
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>

                            <!--Formulario para añadir comentario-->
                            <form class="comentario-form" method="post" action="@Url.Action("añadirComentario", "ControladorSubirPublicaciones")">
                                <input type="hidden" name="idPublicacion" value="@publicacion.idPublicacion" />
                                <div class="form-group">
                                    <textarea class="form-control" name="ContenidoComentario" placeholder="Escribe tu comentario"></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary">Comentar</button>
                            </form>
                        </div>
                    }
                </main>
             
                
                <!--Mensajes de exito-->
                @section scripts {
                    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

                    <!--Mensaje exito al subir publicacion-->
                    <script>
                        document.addEventListener('DOMContentLoaded', function () {
                            var exitoMensaje = '@TempData["ExitoMensaje"]';

                            if (exitoMensaje) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '¡Éxito!',
                                    text: exitoMensaje,
                                    showConfirmButton: true,
                                });
                            }
                        });
                    </script>
                    <!--Mensaje de exito al dar me gusta-->
                    <script>
                        document.addEventListener('DOMContentLoaded', function () {
                            var exitoMensaje = '@TempData["darMeGusta"]';

                            if (exitoMensaje) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '¡Éxito!',
                                    text: exitoMensaje,
                                    showConfirmButton: true,
                                });
                            }
                        });
                    </script>
                    <!--Mensaje de exito al quitar me gusta-->
                    <script>
                        document.addEventListener('DOMContentLoaded', function () {
                            var exitoMensaje = '@TempData["eliminarMeGusta"]';

                            if (exitoMensaje) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '¡Éxito!',
                                    text: exitoMensaje,
                                    showConfirmButton: true,
                                });
                            }
                        });
                    </script>
                }
            </div>
        </div>
    </div>

    <!-- Bootstrap JS y Popper.js (si es necesario) 
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script> -->
</body>
</html>
