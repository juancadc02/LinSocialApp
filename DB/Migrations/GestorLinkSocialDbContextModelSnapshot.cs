// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(GestorLinkSocialDbContext))]
    partial class GestorLinkSocialDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DB.Modelo.Accesos", b =>
                {
                    b.Property<int>("idAcceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idAcceso"));

                    b.Property<int>("codigoAcceso")
                        .HasColumnType("integer");

                    b.Property<string>("descripcionAcceso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idAcceso");

                    b.ToTable("Accesos");
                });

            modelBuilder.Entity("DB.Modelo.Usuarios", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("correoElectronico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dniUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fchNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fchRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("idAcceso")
                        .HasColumnType("integer");

                    b.Property<string>("movilUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombreCompleto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idUsuario");

                    b.HasIndex("idAcceso");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DB.Modelo.Usuarios", b =>
                {
                    b.HasOne("DB.Modelo.Accesos", "Accesos")
                        .WithMany()
                        .HasForeignKey("idAcceso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accesos");
                });
#pragma warning restore 612, 618
        }
    }
}
